name: Create and Publish New C# Library

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version name for the new library'
        required: true
        default: '1.0.0'
      project:
        description: 'Select the project name'
        required: true
        type: choice
        options:
          - customtable
          - v2
          - commerceportal
          - payment

jobs:
  create-publish-library:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Install NSwag CLI
      run: dotnet tool install --global NSwag.ConsoleCore

    - name: Create new C# library
      run: |
        PROJECT_NAME="znode.${{ github.event.inputs.project }}.client.${{ github.event.inputs.version }}"
        mkdir $PROJECT_NAME
        cd $PROJECT_NAME
        dotnet new classlib --name $PROJECT_NAME --output .
        rm Class1.cs  # Remove default Class1.cs

    - name: Generate client code using NSwag
      run: |
        PROJECT_NAME="znode.${{ github.event.inputs.project }}.client.${{ github.event.inputs.version }}"
        cd $PROJECT_NAME
        nswag openapi2csclient /input:../swagger.json /output:Client.cs /namespace:$PROJECT_NAME

    - name: Add Newtonsoft.Json package
      run: |
        PROJECT_NAME="znode.${{ github.event.inputs.project }}.client.${{ github.event.inputs.version }}"
        cd $PROJECT_NAME
        dotnet add package Newtonsoft.Json

    - name: Pack the library into a NuGet package
      run: |
        PROJECT_NAME="znode.${{ github.event.inputs.project }}.client.${{ github.event.inputs.version }}"
        cd $PROJECT_NAME
        dotnet pack --configuration Release

    - name: Publish package to NuGet source
      run: |
        PROJECT_NAME="znode.${{ github.event.inputs.project }}.client.${{ github.event.inputs.version }}"
        PACKAGE_FILE=$(find ./bin/Release -name "*.nupkg")
        dotnet nuget push "$PACKAGE_FILE" --source "https://nuget.pkg.github.com/git-hub-amla/nugetsourceamla/index.json" --api-key "${{ secrets.NUGET_API_KEY }}"
