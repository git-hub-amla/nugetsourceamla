name: Build and Package NuGet

on:
  workflow_dispatch:  # Enables manual triggering with inputs
    inputs:
      package_version:
        description: 'Version of the NuGet package'  # Prompt for the input
        required: true
        default: '1.0.0'  # Default version, can be changed when running manually
      libraries:
        description: 'Select Libraries to Build and Package'
        required: true
        type: choice
        options:
          - Library1
          - Library2
          - Both

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the project repository
    - name: Checkout the project repository
      uses: actions/checkout@v2
      with:
        repository: git-hub-amla/projectamla  # Replace with your repo name if different
        token: ${{ secrets.ACCESS_TOKEN }}     # Using a secret for secure authentication
        path: project                         # Clone the repo into a folder named "project"

    # Step 2: Setup .NET environment
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0'  # Adjust according to your .NET version

    # Conditional Step: Restore, build, and pack based on selected libraries
    - name: Build and Package Library1
      if: startsWith(github.event.inputs.libraries, 'Library1') || github.event.inputs.libraries == 'Both'
      run: |
        # Restore dependencies for Library1
        dotnet restore project/NugetApplication/Library1/Library1.csproj

        # Build Library1
        dotnet build project/NugetApplication/Library1/Library1.csproj --configuration Release

        # Pack Library1
        dotnet pack project/NugetApplication/Library1/Library1.csproj --configuration Release --output ./nupkgs /p:PackageVersion=${{ github.event.inputs.package_version }}

    - name: Build and Package Library2
      if: github.event.inputs.libraries == 'Library2' || github.event.inputs.libraries == 'Both'
      run: |
        # Restore dependencies for Library2
        dotnet restore project/NugetApplication/ClassLibrary2/ClassLibrary2.csproj

        # Build Library2
        dotnet build project/NugetApplication/ClassLibrary2/ClassLibrary2.csproj --configuration Release

        # Pack Library2
        dotnet pack project/NugetApplication/ClassLibrary2/ClassLibrary2.csproj --configuration Release --output ./nupkgs /p:PackageVersion=${{ github.event.inputs.package_version }}

    # Step 6: Publish the NuGet package to GitHub Packages in 'nugetsourceamla' repository
    - name: Publish NuGet Package
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}  # Personal access token or GitHub token
      run: |
        dotnet nuget push ./nupkgs/*.nupkg \
          --source "https://nuget.pkg.github.com/git-hub-amla/index.json" \
          --api-key $GITHUB_TOKEN \
          --skip-duplicate
